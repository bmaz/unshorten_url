version: '3'

networks:
  default:
    external:
      name: urls0

services:
  rabbitmq:
    image: docker.rech.priv.ina:5000/rabbitmq:3.6.14-management
    hostname: rabbitmq
    ports:
      - 15672:15672
      - 5672:5672
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: '-rabbit tcp_listeners [{"::",5672}]'
    restart: on-failure
    deploy:
      mode: replicated
      replicas: 1
  worker:
    build: docker_image
    image: unshortenurl_worker:latest
    depends_on:
      - rabbitmq
      - redis
    environment:
      - REDIS_HOST=redis
    volumes:
      - ./src:/usr/src/app
      - ./:/data
    command: ["python", "worker.py"]
    deploy:
      mode: replicated
      replicas: 8
  consumer:
    build: docker_image
    image: unshortenurl_consumer:latest
    depends_on:
      - rabbitmq
    volumes:
      - ./src:/usr/src/app
      - ./:/data
    command: ["python", "consumer.py"]
  redis:
    image: redis:alpine
    volumes:
      - ./redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]
  client:
    build: docker_image
    image: unshortenurl_client:latest
    depends_on:
      - rabbitmq
    volumes:
      - ./src:/usr/src/app
      - ./:/data
    command: ["python", "client.py"]
    deploy:
      restart_policy:
        condition: on-failure